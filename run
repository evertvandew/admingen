#!/usr/bin/env python3.6
""" Run a specific project """

import argparse
import os.path
import os
import sys
import importlib

root = os.path.dirname(__file__)

parser = argparse.ArgumentParser(description='Process some integers.')
parser.add_argument('project', help='The project to run')
parser.add_argument('--create-dirs', action='store_true')
#parser.add_argument('--root', help='Root directory for the code', default=root)

args = parser.parse_args()
print (args)

# Check the project exists
proj_dir = os.path.join(root, 'projects', args.project)
assert os.path.exists(proj_dir), 'Project %s does not exist'%args.project

# Add the proper directories to the system path so they can be imported
sys.path.append(os.path.join(root, 'projects'))
sys.path.append(root+'/src')
os.environ['ROOTDIR'] = os.path.abspath(root)
os.environ['PROJDIR'] = os.path.abspath(proj_dir)
os.environ['SRCDIR'] = os.path.abspath(root + '/src')



# Find a working directory for storing logs and operational files
# Fallback is the cwd
patterns = [os.environ['HOME']+'/var/{type}',
            '/var/{type}/%s'%args.project,
            os.getcwd()+'/{type}',
            os.getcwd()]

for p in patterns:
    success = True
    for e, t in [('OPSDIR', 'lib'), ('LOGDIR', 'log')]:
        path = p.format(type=t)

        if not os.path.exists(path):
            if args.create_dirs:
                # Try to create the required directories
                try:
                    # The directories are inaccessible for other users
                    os.mkdir(path, mode=0o700)
                except:
                    print ('Could not create directory', path)
                    success = False
                    break
            else:
                print ('Directory does not exist:', path)
                success = False
                break
        os.environ[e] = path
    if success:
        break

print('Using ops and log directories', os.environ['OPSDIR'], os.environ['LOGDIR'])
os.environ['RUNDIR'] = os.environ['OPSDIR']

# Look for the configuration
for confdir in [os.environ['HOME']+'/etc/%s'%args.project, '/etc/%s'%args.project, None]:
    if not confdir:
        raise RuntimeError( 'Could not find a configuration for project %s'% args.project )
    if os.path.exists(confdir):
        break

# Load the configuration
from admingen import config
config.set_configdir(confdir)

# Load the project as a library
mod = importlib.import_module(args.project)

# Make the project directory the current directory
os.chdir(proj_dir)

# Run the project
print ('Starting project', args.project)
mod.run()

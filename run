#!/usr/bin/env python3.6
""" Run a specific project """

import argparse
import os.path
import os
import sys
import importlib

root = os.path.dirname(__file__)

parser = argparse.ArgumentParser(description='Process some integers.')
parser.add_argument('project', help='The project to run')
#parser.add_argument('--root', help='Root directory for the code', default=root)

args = parser.parse_args()
print (args)

# Check the project exists
proj_dir = os.path.join(root, 'projects', args.project)
assert os.path.exists(proj_dir), 'Project %s does not exist'%args.project

# Add the proper directories to the system path so they can be imported
sys.path.append(os.path.join(root, 'projects'))
sys.path.append(root+'/src')
os.environ['ROOTDIR'] = os.path.abspath(root)
os.environ['PROJDIR'] = os.path.abspath(proj_dir)
os.environ['SRCDIR'] = os.path.abspath(root + '/src')

# Find a var directory
for fname in [os.environ['HOME']+'/var', '/var/lib/'+args.project]:
    if os.path.exists(fname):
        os.environ['PRODDIR'] = fname

# Look for the configuration
for confdir in [os.environ['HOME']+'/etc/%s'%args.project, '/etc/%s'%args.project, None]:
    if not confdir:
        raise RuntimeError( 'Could not find a configuration for project %s'% args.project )
    if os.path.exists(confdir):
        break

# Load the configuration
from admingen import config
config.set_configdir(confdir)

# Run the project
print ('Starting project', args.project)
mod = importlib.import_module(args.project)
mod.run()
